package br.com.neolog.welcomekit.controllers;

import javax.validation.Valid;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import br.com.neolog.welcomekit.models.Stock;
import br.com.neolog.welcomekit.services.StockService;

@RestController
@RequestMapping( value = "/stock", produces = MediaType.APPLICATION_JSON_VALUE )
public class StockController
{

    @Autowired
    StockService stockService;

    @PostMapping( "/save" )
    public ResponseEntity<Stock> save(
        @RequestBody @Valid final Stock stock )
    {
        final Stock stockQuantity = stockService.save( stock );
        return new ResponseEntity<Stock>( stockQuantity, HttpStatus.CREATED );
    }

    @DeleteMapping( "remove/{id}" )
    public ResponseEntity<Integer> deleteProduct(
        @PathVariable( "id" ) final Integer id )
    {
        final Integer stockId = stockService.delete( id );
        return new ResponseEntity<Integer>( stockId, HttpStatus.OK );
    }

    @PutMapping( "decrease/{code}/{quantity}" )
    public ResponseEntity<Stock> decreaseStockProduct(
        @PathVariable( "code" ) final int code,
        @PathVariable( "quantity" ) final int quantity )
    {
        final Stock totalStock = stockService.decreaseStock( code, quantity );
        return new ResponseEntity<Stock>( totalStock, HttpStatus.OK );
    }

    @PutMapping( "increase/{codeProduct}/{quantity}" )
    public ResponseEntity<Stock> increaseStockProduct(
        @PathVariable( "codeProduct" ) final int code,
        @PathVariable( "quantity" ) final int quantity )
    {
        final Stock totalStock = stockService.increaseStock( code, quantity );
        return new ResponseEntity<Stock>( totalStock, HttpStatus.OK );
    }

    @GetMapping( "search/quantity/code/{codeProduct}" )
    public ResponseEntity<Integer> findQuantityOfProduct(
        @PathVariable( "codeProduct" ) final int codeProduct )
    {
        final Integer quantityProduct = stockService.findQuantityStockByProductCode( codeProduct );
        return new ResponseEntity<Integer>( quantityProduct, HttpStatus.OK );
    }

}