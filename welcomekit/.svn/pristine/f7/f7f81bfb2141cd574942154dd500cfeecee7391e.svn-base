package br.com.neolog.welcomekit.controllers;

import java.util.List;

import javax.validation.Valid;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import br.com.neolog.welcomekit.models.Product;
import br.com.neolog.welcomekit.services.ProductService;

@RestController
@RequestMapping( value = "/product", produces = MediaType.APPLICATION_JSON_VALUE )
public class ProductController
{

    @Autowired
    private ProductService productService;

    @PostMapping( "/save" )
    public ResponseEntity<Integer> saveProduct(
        @RequestBody @Valid final Product product )
    {

        final Integer productId = productService.save( product );
        return new ResponseEntity<Integer>( productId, HttpStatus.CREATED );
    }

    @DeleteMapping( "/remove/{id}" )
    public ResponseEntity<Integer> deleteProduct(
        @PathVariable( "id" ) final Integer id )
    {
        final Integer idProduct = productService.delete( id );
        return new ResponseEntity<Integer>( idProduct, HttpStatus.OK );
    }

    @GetMapping( "/search/id/{id}" )
    public ResponseEntity<Product> findProductById(
        @PathVariable( "id" ) final Integer id )
    {
        final Product product = productService.findById( id );
        return new ResponseEntity<Product>( product, HttpStatus.OK );
    }

    @GetMapping( "searchAll" )
    public List<Product> findAllProducts()
    {
        return productService.findAllProducts();
    }

    @PutMapping( "/update" )
    public ResponseEntity<Product> updateProduct(
        @RequestBody @Valid final Product product )
    {
        productService.updateProduct( product );
        return new ResponseEntity<Product>( product, HttpStatus.OK );
    }

    @GetMapping( "/search/name/{name}" )
    public ResponseEntity<Product> findProductByName(
        @PathVariable( "name" ) final String name )
    {
        final Product product = productService.findByName( name );
        return new ResponseEntity<Product>( product, HttpStatus.OK );
    }

    @GetMapping( "/search/code/{code}" )
    public ResponseEntity<Product> findProductByCode(
        @PathVariable( "code" ) final Integer code )
    {
        final Product product = productService.findByCode( code );
        return new ResponseEntity<Product>( product, HttpStatus.OK );
    }

    @GetMapping( "/search/category/{idCategory}" )
    public ResponseEntity<List<Product>> findByCategory(
        @PathVariable( "idCategory" ) final int id )
    {
        final List<Product> list = productService.findAllProductByCategory( id );
        return new ResponseEntity<List<Product>>( list, HttpStatus.OK );
    }
}
